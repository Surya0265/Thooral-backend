generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EmailVerification {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId    String   @db.Uuid
  code      String
  createdAt DateTime @default(dbgenerated("(now() AT TIME ZONE 'Asia/Kolkata'::text)")) @db.Timestamptz(6)
  expiresAt DateTime @db.Timestamptz(6)
  isUsed    Boolean  @default(false)
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([userId])
}

model PasswordReset {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId    String   @db.Uuid
  token     String   @unique
  createdAt DateTime @default(dbgenerated("(now() AT TIME ZONE 'Asia/Kolkata'::text)")) @db.Timestamptz(6)
  expiresAt DateTime @db.Timestamptz(6)
  isUsed    Boolean  @default(false)
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token])
  @@index([userId])
}

model User {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  fullName          String
  email             String              @unique
  schoolName        String
  passwordHash      String
  isVerified        Boolean             @default(false)
  createdAt         DateTime            @default(dbgenerated("(now() AT TIME ZONE 'Asia/Kolkata'::text)")) @db.Timestamptz(6)
  updatedAt         DateTime            @default(dbgenerated("(now() AT TIME ZONE 'Asia/Kolkata'::text)")) @db.Timestamptz(6)
  EmailVerification EmailVerification[]
  PasswordReset     PasswordReset[]
}
